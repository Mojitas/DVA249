#!/bin/bash

# Computer name
# Gateway (Default Route)
# Name of every network interface (excluding localhost), and their respective
#	ip-address
#	mac-address
#	Status (up/down)

#######################################################################
##### Helper Functions

# get gateway address and print it
function f_default_gateway {

	GATEWAY=$( ip r show default | awk '{print $3}')
	if [ -n "$GATEWAY" ]; then
	echo -e "${RED}Gateway${NC}:\t" $GATEWAY
	fi

}

# get interface $INTERFACE information - IPv4, IPv6, mac address, status - and print it
function f_device_info {
	
	echo -e "\n\e[34m\e[5mInterface: $INTERFACE${NC}"

	IPADDR="ip -a address show $INTERFACE"

	STATUS=$($IPADDR)	# Execute command in IPADDR
	STATUS=($STATUS)	# Convert to array
	STATUS=${STATUS[8]}	# Get the 8th word
	echo -e "${RED}Status${NC}:\t\t" $STATUS

	# execute command, grep rows and print columns
	IPV4=$($IPADDR | grep "inet " | awk '{print $2}')
	# if a string was retrieved, print it
	if [ -n "$IPV4" ]; then
	echo -e "${RED}IPv4${NC}:\t\t" $IPV4
	fi

	IPV6=$($IPADDR | grep "inet6 " | awk '{print $2}')
	if [ -n "$IPV6" ]; then
	echo -e "${RED}IPv6${NC}:\t\t" $IPV6
	fi

	MACADDR=$($IPADDR | grep "link/" | awk '{print $2}')
	if [ -n "$MACADDR" ]; then
	echo -e "${RED}MAC address${NC}:\t" $MACADDR "\n"
	fi

}

#######################################################################
##### Main
function f_networkinfo {

	# computer name
	NAME=`uname -n`
	echo -e "${RED}Computer name${NC}: $NAME"

	# Get device/interface names, excluding localhost
	DEVICES=`nmcli -f GENERAL.DEVICE device show | awk '{print $2}' | grep -v "^lo$"`

	# If no network interfaces exists
	if [ -z "$DEVICES" ]; then
	echo "There are currently no network interfaces active."
	fi

	# Convert string to array
	DEVICES=($DEVICES)

	# For each interface: print interface information
	for INTERFACE in ${DEVICES[*]}
	do
		f_device_info
	done

	# Print default gateway
	f_default_gateway

	enter_continue
}


