#!/bin/bash

# Computer name
# Gateway (Default Route)
# Name of every network interface (excluding localhost), and their respective
#	ip-address
#	mac-address
#	Status (up/down)

#######################################################################
##### Tests

MOJITAS_INTERFACES="GENERAL.DEVICE:                         wlo1\nGENERAL.DEVICE:                         enp0s25\nGENERAL.DEVICE:                         lo"

MOJITAS_IPADDRSHOW="1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: enp0s25: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc fq_codel state DOWN group default qlen 1000
    link/ether e4:11:5b:56:b8:a0 brd ff:ff:ff:ff:ff:ff
3: wlo1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 20:10:7a:3b:c6:0f brd ff:ff:ff:ff:ff:ff
    inet 192.168.100.236/24 brd 192.168.100.255 scope global dynamic noprefixroute wlo1
       valid_lft 322sec preferred_lft 322sec
    inet6 fe80::375:5cde:92a4:296/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever"

#echo -e "$MOJITAS_INTERFACES"
#echo -e "$MOJITAS_INTERFACES" | awk '{print $2}'
#echo -e "$MOJITAS_INTERFACES" | awk '{print $2}' | grep -v "^lo$"

#######################################################################
##### Functions

# get gateway address 
function f_default_gateway {

	GATEWAY=$( ip r show default | awk '{print $3}')
	if [ -n "$GATEWAY" ]; then
	echo -e "${RED}GATEWAY${NC}:\t\t" $GATEWAY
	fi

}


# get interface information 
function f_device_info {

	echo -e "\n${RED}Interface${NC}: $INTERFACE"

	IPADDR="ip -a address show $INTERFACE"

	STATUS=$($IPADDR)	# Execute command in IPADDR
	STATUS=($STATUS)	# Convert to array
	STATUS=${STATUS[8]}	# Get the 8th word
	echo -e "${RED}Status${NC}: \t\t" $STATUS

	# execute command, grep rows and print columns
	IPV4=$($IPADDR | grep "inet " | awk '{print $2}')
	# if command successful, print
	if [ -n "$IPV4" ]; then
	echo -e "${RED}IPv4${NC}:\t\t" $IPV4
	fi

	IPV6=$($IPADDR | grep "inet6 " | awk '{print $2}')
	if [ -n "$IPV6" ]; then
	echo -e "${RED}IPv6${NC}:\t\t" $IPV6
	fi

	MACADDR=$($IPADDR | grep "link/" | awk '{print $2}')
	if [ -n "$MACADDR" ]; then
	echo -e "${RED}MAC address${NC}:\t" $MACADDR "\n"
	fi

}



#######################################################################
##### Main
function f_networkinfo {

# computer name
NAME=`uname -n`
echo -e "${RED}Computer name${NC}: $NAME"

# Get device/interface names, excluding localhost
DEVICES=`nmcli -f GENERAL.DEVICE device show | awk '{print $2}' | grep -v "^lo$"`

# If no network interfaces exists
if [ -z "$DEVICES" ]; then
echo "There are currently no network interfaces active."
fi

# Convert string to array
DEVICES=($DEVICES)

# For each interface: print interface information
for INTERFACE in ${DEVICES[*]}
do
	f_device_info
done

# Print default gateway
f_default_gateway

enter_continue
}


