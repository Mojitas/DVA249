# Computer name
# Gateway (Default Route)
# Name of every network interface (excluding localhost), and their respective
#	ip-address
#	mac-address
#	Status (up/down)

#######################################################################
##### Functions

# get gateway address 
function f_default_gateway {

GATEWAY=$( ip r show default | awk '{print $3}')
if [ -n "$GATEWAY" ]; then
echo -e "GATEWAY:\t\t" $GATEWAY
fi

}


# get interface information 
function f_device_info {

echo -e "\nInterface: $INTERFACE"

IPADDR="ip -a address show $INTERFACE"

STATUS=$($IPADDR)	# Execute command in IPADDR
STATUS=($STATUS)	# Convert to array
STATUS=${STATUS[8]}	# Get the 8th word

# execute command, grep rows and print columns
IPV4=$($IPADDR | grep "inet " | awk '{print $2}')
# if command successful, print
if [ $? -eq 0 ]; then
echo -e "IPv4:\t\t" $IPV4
fi

IPV6=$($IPADDR | grep "inet6 " | awk '{print $2}')
if [ $? -eq 0 ]; then
echo -e "IPv6:\t\t" $IPV6
fi

MACADDR=$($IPADDR | grep "link/" | awk '{print $2}')
if [ -n "$MACADDR" ]; then
echo -e "MAC address:\t" $MACADDR "\n"
fi

}



#######################################################################
##### Main

# computer name
NAME=`uname -n`
echo "Computer name: $NAME"

# Get device/interface names
DEVICES=`nmcli -f GENERAL.DEVICE device show | awk '{print $2}'`

# Get device/interface names, excluding localhost
#DEVICES=`nmcli -f GENERAL.DEVICE device show | grep -v lo | awk '{print $2}'`

# If no network interfaces exists
if [ -z "$DEVICES" ]; then
echo "There are currently no network interfaces active."
fi

# Convert string to array
DEVICES=($DEVICES)

# For each interface: print interface information
for INTERFACE in ${DEVICES[*]}
do
	f_device_info
done

# Print default gateway
f_default_gateway


###############################################
##### Just some trash or something, idk....

#print stuff
# NR - Number of records (line counter), NF - number of fields 
#ip -br address show | awk '{print NR,NF, $0}'





